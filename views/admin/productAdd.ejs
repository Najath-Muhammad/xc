<%- include('../../views/partials/admin/header') %>


    <style>
        .content-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .content-title {
            font-size: 24px;
            font-weight: bold;
        }

        .card {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 100%;
            max-width: 800px;
            margin: auto;
        }

        .form-label {
            font-weight: bold;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .form-select {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .error-message {
            color: red;
            font-size: 12px;
        }

        .btn {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            padding-left: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-right: 10px;
        }
        .button-container {
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }
        .btn:hover {
            background-color: #45a049;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
            width: 100px;
            height: 100px;
            object-fit: cover;
        }

        .image-cropper {
            width: 300px;
            height: 300px;
            overflow: hidden;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        .image-cropper img {
            max-width: 100%;
        }
        .invalid-input {
        border-color: #dc3545 !important;
        background-color: #fff8f8;
    }
    .error-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
    }
    </style>
    <div class="main-content">
        <section class="content-main">
            <div class="row justify-content-center">
                <div class="col-12 col-lg-10">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                    </div>
                    <div class="card mb-4">
                        <div class="card-body">
                            <form id="addProductForm" action="/admin/addProducts" method="POST" enctype="multipart/form-data" onsubmit="return validateAndSubmit(event)">
                                <div class="mb-4">
                                    <label for="productName" class="form-label">Product Name</label>
                                    <input type="text" placeholder="Type here" name="productName" class="form-control border" id="productName">
                                    <div id="productName-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4 mb-4">
                                    <label class="form-label">Brand</label>
                                    <select class="form-select border" name="brand" id="brand">
                                        <option value="">Select Brand</option>
                                        <% brand.forEach(function(brandItem) { %>
                                            <option value="<%= brandItem._id %>"><%= brandItem.brandName %></option>
                                        <% }); %>
                                    </select>
                                    <div id="brand-error" class="error-message"></div>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Full description</label>
                                    <textarea placeholder="Type here" id="description" name="description" class="form-control border" rows="4"></textarea>
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Regular price</label>
                                            <input placeholder="₹" name="regularPrice" type="number" class="form-control border">
                                            <div id="regularPrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sale price</label>
                                            <input placeholder="₹" name="salePrice" type="number" class="form-control border">
                                            <div id="salePrice-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Quantity</label>
                                            <input placeholder="" name="quantity" type="number" class="form-control border">
                                            <div id="quantity-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Color</label>
                                            <input name="color" type="text" class="form-control border">
                                            <div id="color-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-body">
                                        <div class="row gx-2">
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Category</label>
                                                <select class="form-select border" style="width: 150px;" name="category" id="category">
                                                    <option value="">Select Category</option>
                                                    <% cat.forEach(function(categoryItem) { %>
                                                        <option value="<%= categoryItem._id %>"><%= categoryItem.name %></option>
                                                    <% }); %>
                                                </select>
                                                <div id="category-error" class="error-message"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Image upload sections -->
                                <div class="card mb-2">
                                    <div class="card-header">
                                        <h4>Choose images</h4>
                                    </div>
                                    <div class="border row">
                                        <div id="addedImagesContainer1" class="thumbnails-container"></div>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <input class="form-control" type="file" name="images" id="imageInput1" accept="image/png, image/jpeg, image/jpg" multiple>
                                            <div id="images-error1" class="error-message"></div>
                                        </div>
                                        <div class="image-cropper">
                                            <img id="imagePreview1" src="" alt="Image Preview">
                                        </div>
                                        <div class="button-container">
                                            <button type="button" id="cropButton1" class="btn">Crop</button>
                                            <button type="button" id="saveButton1" class="btn">Save</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="card mb-2">
                                    <div class="card-header">
                                        <h4>Choose images</h4>
                                    </div>
                                    <div class="border row">
                                        <div id="addedImagesContainer2" class="thumbnails-container"></div>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <input class="form-control" type="file" name="images" id="imageInput2" accept="image/png, image/jpeg, image/jpg" multiple>
                                            <div id="images-error2" class="error-message"></div>
                                        </div>
                                        <div class="image-cropper">
                                            <img id="imagePreview2" src="" alt="Image Preview">
                                        </div>
                                        <div class="button-container">
                                            <button type="button" id="cropButton1" class="btn">Crop</button>
                                            <button type="button" id="saveButton1" class="btn">Save</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="card mb-2">
                                    <div class="card-header">
                                        <h4>Choose images</h4>
                                    </div>
                                    <div class="border row">
                                        <div id="addedImagesContainer3" class="thumbnails-container"></div>
                                    </div>
                                    <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <input class="form-control" type="file" name="images" id="imageInput3" accept="image/png, image/jpeg, image/jpg" multiple>
                                            <div id="images-error3" class="error-message"></div>
                                        </div>
                                        <div class="image-cropper">
                                            <img id="imagePreview3" src="" alt="Image Preview">
                                        </div>
                                        <div class="button-container">
                                            <button type="button" id="cropButton1" class="btn">Crop</button>
                                            <button type="button" id="saveButton1" class="btn">Save</button>
                                        </div>
                                </div>

                                <div>
                                    <button class="btn" type="submit">Publish</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        function validateAndSubmit(event) {
            event.preventDefault();
            if (validateForm()) {
                document.getElementById("addProductForm").submit();
            }
        }
    
        function validateForm() {
            clearErrorMessages();
            let isValid = true;
    
            const productName = document.getElementById('productName').value.trim();
            const description = document.getElementById('description').value.trim();
            const brand = document.getElementById('brand').value.trim();
            const regularPrice = document.getElementsByName('regularPrice')[0].value.trim();
            const salePrice = document.getElementsByName('salePrice')[0].value.trim();
            const color = document.getElementsByName('color')[0].value.trim();
            const category = document.getElementById('category').value.trim();
            const images1 = document.getElementById('imageInput1').files;
            const images2 = document.getElementById('imageInput2').files;
            const images3 = document.getElementById('imageInput3').files;
            const quantity = document.getElementsByName('quantity')[0].value.trim();
    
           
            if (productName === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }
    

            if (description === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }
    
            // Validate brand
            if (brand === "") {
                displayErrorMessage('brand-error', 'Please select a brand.');
                isValid = false;
            }
    
            // Validate quantity
            if (quantity === "" || parseInt(quantity) < 0 || isNaN(quantity)) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }
    
            // Validate regular price
            if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
    
            // Validate sale price
            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
                isValid = false;
            }
    
            // Ensure regular price is greater than sale price
            if (regularPrice !== "" && salePrice !== "" && parseFloat(regularPrice) <= parseFloat(salePrice)) {
                displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
                isValid = false;
            }
    
            // Validate color
            if (color === "") {
                displayErrorMessage('color-error', 'Please enter a color.');
                isValid = false;
            }
    
            // Validate category
            if (category === "") {
                displayErrorMessage('category-error', 'Please select a category.');
                isValid = false;
            }
    
            // Validate images
            if (images1.length === 0 && images2.length === 0 && images3.length === 0) {
                displayErrorMessage('images-error1', 'Please select at least one image.');
                isValid = false;
            }
    
            return isValid;
        }
    
        function displayErrorMessage(id, message) {
            const errorElement = document.getElementById(id);
            if (errorElement) {
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }
        }
    
        function clearErrorMessages() {
            const errorMessages = document.querySelectorAll(".error-message");
            errorMessages.forEach((element) => {
                element.innerText = "";
                element.style.display = "none";
            });
        }
    
        const maxImages = 4;
        let imageCount = 0;
    
        function setupImageUploader(index) {
            const imageInput = document.getElementById(`imageInput${index}`);
            const imagePreview = document.getElementById(`imagePreview${index}`);
            const cropButton = document.getElementById(`cropButton${index}`);
            const saveButton = document.getElementById(`saveButton${index}`);
            const addedImagesContainer = document.getElementById(`addedImagesContainer${index}`);
    
            let cropper;
    
            imageInput.addEventListener('change', function (event) {
                const file = event.target.files[0];
                if (file && imageCount < maxImages) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(imagePreview, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 1,
                        });
                    };
                    reader.readAsDataURL(file);
                } else if (imageCount >= maxImages) {
                    alert('You can only add up to ' + maxImages + ' images.');
                }
            });
    
            cropButton.addEventListener('click', function () {
                if (cropper) {
                    const canvas = cropper.getCroppedCanvas();
                    const img = document.createElement('img');
                    img.src = canvas.toDataURL();
                    img.classList.add('thumbnail');
                    addedImagesContainer.appendChild(img);
    
                    canvas.toBlob(function (blob) {
                        const productForm = document.getElementById('addProductForm');
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = `croppedImage${imageCount}`;
                        input.value = canvas.toDataURL();
                        productForm.appendChild(input);
    
                        imageCount++;
                        if (imageCount > maxImages) {
                            document.querySelectorAll('input[type="file"]').forEach(input => input.disabled = true);
                        }
                    });
                }
            });
    
            saveButton.addEventListener('click', function () {
                if (cropper) {
                    const canvas = cropper.getCroppedCanvas();
                    canvas.toBlob(function (blob) {
                        const productForm = document.getElementById('addProductForm');
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = `croppedImage${imageCount}`;
                        input.value = canvas.toDataURL();
                        productForm.appendChild(input);
    
                        imageCount++;
                        if (imageCount >= maxImages) {
                            document.querySelectorAll('input[type="file"]').forEach(input => input.disabled = true);
                        }
                        saveButton.style.display = 'none';
                        cropButton.style.display = 'none';
                        cropper.destroy();
    
                    });
                }
            });
        }
    
        for (let i = 1; i <= maxImages; i++) {
            setupImageUploader(i);
        }
    </script>
    
</body>
</html>