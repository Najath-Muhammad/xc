<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Coupon</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .sidebar {
            width: 250px;
            height: 100vh;
            background: linear-gradient(to bottom, #4facfe, #00f2fe);
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            padding: 20px;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 30px;
            font-size: 24px;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 15px 0;
        }

        .sidebar ul li a {
            color: white;
            text-decoration: none;
            font-size: 18px;
            display: block;
            transition: all 0.3s ease;
        }

        .sidebar ul li a:hover {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            padding: 10px;
        }

        .main-content {
            margin-left: 260px;
            padding: 20px;
        }

        .edit-coupon-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            max-width: 800px;
            margin: 20px auto;
        }

        .error-message {
            color: red;
            display: none;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }

        .validation-icon {
            position: absolute;
            right: 10px;
            top: 38px;
            display: none;
        }

        .success-icon {
            color: #28a745;
        }

        .error-icon {
            color: #dc3545;
        }

        .form-group {
            position: relative;
            margin-bottom: 1rem;
        }

        .btn-container {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="/admin/dashboard">Dashboard</a></li>
            <li><a href="/admin/users">User</a></li>
            <li><a href="/admin/orders">Order</a></li>
            <li><a href="/admin/addProducts">Add Products</a></li>
            <li><a href="/admin/products">Products</a></li>
            <li><a href="/admin/brands">Brands</a></li>
            <li><a href="/admin/category">Category</a></li>
            <li><a href="/admin/offers">Offers</a></li>
            <li><a href="/admin/coupons">Coupons</a></li>
        </ul>
    </div>

    <div class="main-content">
        <div class="edit-coupon-card">
            <h2 class="mb-4">Edit Coupon</h2>
            <form id="editForm" action="/admin/updateCoupon/<%= coupon._id %>" method="post">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="couponName" class="form-label">Coupon Name</label>
                            <input type="text" class="form-control" id="couponName" name="couponName" value="<%= coupon.name %>">
                            <i class="fas fa-check-circle validation-icon success-icon"></i>
                            <i class="fas fa-exclamation-circle validation-icon error-icon"></i>
                            <small class="error-message" id="couponNameError"></small>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" value="<%= new Date(coupon.createdOn).toISOString().split('T')[0] %>">
                            <i class="fas fa-check-circle validation-icon success-icon"></i>
                            <i class="fas fa-exclamation-circle validation-icon error-icon"></i>
                            <small class="error-message" id="startDateError"></small>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="endDate" class="form-label">End Date</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" value="<%= new Date(coupon.expireOn).toISOString().split('T')[0] %>">
                            <i class="fas fa-check-circle validation-icon success-icon"></i>
                            <i class="fas fa-exclamation-circle validation-icon error-icon"></i>
                            <small class="error-message" id="endDateError"></small>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="offerPrice" class="form-label">Offer Price</label>
                            <input type="number" class="form-control" id="offerPrice" name="offerPrice" value="<%= coupon.offerPrice %>">
                            <i class="fas fa-check-circle validation-icon success-icon"></i>
                            <i class="fas fa-exclamation-circle validation-icon error-icon"></i>
                            <small class="error-message" id="offerPriceError"></small>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label for="minimumPrice" class="form-label">Minimum Price</label>
                            <input type="number" class="form-control" id="minimumPrice" name="minimumPrice" value="<%= coupon.minimumPrice %>">
                            <i class="fas fa-check-circle validation-icon success-icon"></i>
                            <i class="fas fa-exclamation-circle validation-icon error-icon"></i>
                            <small class="error-message" id="minimumPriceError"></small>
                        </div>
                    </div>
                </div>
                <div class="btn-container">
                    <a href="/admin/coupons" class="btn btn-secondary">Cancel</a>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const form = document.getElementById('editForm');
        const couponName = document.getElementById('couponName');
        const offerPrice = document.getElementById('offerPrice');
        const startDate = document.getElementById('startDate');
        const endDate = document.getElementById('endDate');
        const minimumPrice = document.getElementById('minimumPrice');

        function showError(input, message) {
            const formGroup = input.parentElement;
            const errorMessage = formGroup.querySelector('.error-message');
            const successIcon = formGroup.querySelector('.success-icon');
            const errorIcon = formGroup.querySelector('.error-icon');
            
            input.className = 'form-control error';
            errorMessage.style.display = 'block';
            errorMessage.innerText = message;
            successIcon.style.display = 'none';
            errorIcon.style.display = 'block';
        }

        function showSuccess(input) {
            const formGroup = input.parentElement;
            const errorMessage = formGroup.querySelector('.error-message');
            const successIcon = formGroup.querySelector('.success-icon');
            const errorIcon = formGroup.querySelector('.error-icon');
            
            input.className = 'form-control success';
            errorMessage.style.display = 'none';
            successIcon.style.display = 'block';
            errorIcon.style.display = 'none';
        }

        function validateCouponName() {
            const value = couponName.value.trim();
            if (value === '') {
                showError(couponName, 'Coupon name is required');
                return false;
            } else if (value.length < 3) {
                showError(couponName, 'Coupon name must be at least 3 characters');
                return false;
            } else if (!/^[A-Za-z0-9]+$/.test(value)) {
                showError(couponName, 'Only letters and numbers are allowed');
                return false;
            } else {
                showSuccess(couponName);
                return true;
            }
        }

        function validatePrice(input, fieldName) {
            const value = input.value;
            if (value === '') {
                showError(input, `${fieldName} is required`);
                return false;
            } else if (value <= 0) {
                showError(input, `${fieldName} must be greater than 0`);
                return false;
            } else {
                showSuccess(input);
                return true;
            }
        }

        function validateDates() {
            const start = new Date(startDate.value);
            const end = new Date(endDate.value);
            
            if (!startDate.value) {
                showError(startDate, 'Start date is required');
                return false;
            }
            
            if (!endDate.value) {
                showError(endDate, 'End date is required');
                return false;
            }
            
            if (end <= start) {
                showError(endDate, 'End date must be after start date');
                return false;
            }

            showSuccess(startDate);
            showSuccess(endDate);
            return true;
        }

        // Event listeners for real-time validation
        couponName.addEventListener('input', validateCouponName);
        offerPrice.addEventListener('input', () => validatePrice(offerPrice, 'Offer price'));
        minimumPrice.addEventListener('input', () => validatePrice(minimumPrice, 'Minimum price'));
        startDate.addEventListener('change', validateDates);
        endDate.addEventListener('change', validateDates);

        // Form submission
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            // Validate all fields
            const isNameValid = validateCouponName();
            const isOfferPriceValid = validatePrice(offerPrice, 'Offer price');
            const isMinPriceValid = validatePrice(minimumPrice, 'Minimum price');
            const areDatesValid = validateDates();

            // If all validations pass
            if (isNameValid && isOfferPriceValid && isMinPriceValid && areDatesValid) {
                const formData = new FormData(this);
                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });

                fetch(this.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(result => {
                    if (result.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Coupon updated successfully!',
                            icon: 'success',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/admin/coupons';
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: result.message || 'Error updating coupon',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Error updating coupon. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    </script>
</body>
</html>