<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .sidebar {
            width: 250px;
            height: 100vh;
            background: linear-gradient(to bottom, #4facfe, #00f2fe);
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            padding: 20px;
        }

        .sidebar h2 {
            text-align: center;
            margin-bottom: 30px;
            font-size: 24px;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 15px 0;
        }

        .sidebar ul li a {
            color: white;
            text-decoration: none;
            font-size: 18px;
            display: block;
            transition: all 0.3s ease;
        }

        .sidebar ul li a:hover {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
            padding: 10px;
        }

        .main-content {
            margin-left: 260px;
            padding: 20px;
        }

        .logout-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            font-size: 16px;
            background-color: #e74c3c;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .logout-btn:hover {
            background-color: #c0392b;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        h1, h2 {
            color: #333;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

        input[type="text"], textarea, input[type="number"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

        textarea {
            resize: vertical;
        }

        button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }

        .btn-info {
            background-color: #17a2b8;
            color: #fff;
        }

        .btn-warning {
            background-color: #ffc107;
            color: #fff;
        }

        .btn-success {
            background-color: #28a745;
            color: #fff;
        }

        .btn-sm {
            font-size: 14px;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px;
            border: 1px solid #f5c6cb;
            border-radius: 4px;
            margin-bottom: 20px;
        }

        #error-container ul {
            list-style-type: none;
            padding-left: 0;
        }

        .category-list {
            margin-top: 40px;
        }

        .offer-action-btns {
            display: flex;
            gap: 10px;
        }

        .offer-action-btns button {
            padding: 8px 15px;
            border-radius: 4px;
            font-size: 14px;
        }

        .btn-add-offer {
            background-color: #28a745;
            color: white;
        }

        .btn-remove-offer {
            background-color: #dc3545;
            color: white;
        }

        .offer-action-btns button:hover {
            opacity: 0.8;
        }

        .list-unlist-btns {
            display: flex;
            gap: 10px;
        }

        .btn-list {
            background-color: #007bff;
            color: white;
        }

        .btn-unlist {
            background-color: #dc3545;
            color: white;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }

        .table-actions {
            display: flex;
            gap: 10px;
        }
    </style>
</head>

<body>
    <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="/admin/dashboard">Dashboard</a></li>
            <li><a href="/admin/users">User</a></li>
            <li><a href="#">Order</a></li>
            <li><a href="/admin/addProducts">Add Products</a></li>
            <li><a href="/admin/products">Products</a></li>
            <li><a href="/admin/brands">Brands</a></li>
            <li><a href="/admin/category">Category</a></li>
            <li><a href="#">Offers</a></li>
            <li><a href="#">Coupons</a></li>
        </ul>
    </div>

    <div class="main-content">
        <button class="logout-btn" onclick="window.location.href='/admin/logout';">Logout</button>
        <div class="container">
            <h1>Category Management</h1>
            <!-- Category Form -->
            <div class="form-group">
                <label for="name">Category Name</label>
                <input type="text" id="name" name="name" placeholder="Enter category name" required>
            </div>
            <div class="form-group">
                <label for="description">Category Description</label>
                <textarea id="description" name="description" placeholder="Enter category description" rows="4" required></textarea>
            </div>
            <button class="btn btn-primary" onclick="submitCategory()">Add Category</button>

            <!-- Error container for validation -->
            <div id="error-container" class="alert-danger" style="display: none;">
                <ul></ul>
            </div>


            <h2>Existing Categories</h2>
            <div class="category-list">
                <% if (cat && cat.length) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>Category Name</th>
                                <th>Description</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cat.forEach(category => { %>
                                <tr>
                                    <td><strong><%= category.name %></strong></td>
                                    <td><%= category.description %></td>
                                    <td>
                                        <% if (category.isListed) { %>
                                            <span>Listed</span>
                                        <% } else { %>
                                            <span>Unlisted</span>
                                        <% } %>
                                        
                                    </td>
                                    <td class="table-actions">
                                        <% if (category.isListed) { %>
                                            <button id="list-unlist-btn-<%= category._id %>" class="btn btn-unlist" onclick="unlistCategory('<%= category._id %>')">Unlist</button>
                                        <% } else { %>
                                            <button id="list-unlist-btn-<%= category._id %>" class="btn btn-list" onclick="listCategory('<%= category._id %>')">List</button>
                                        <% } %>
                                        <button class="btn btn-info btn-sm">
                                            <a href="/admin/editCategory?id=<%= category._id %>" style="text-decoration: none;">Edit</a>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p>No categories found.</p>
                <% } %>

                <nav>
                    <ul class="pagination justify-content-center">
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
            

    <script>
        // async function addOffer(categoryId) {
        //     const amountInput = document.getElementById(`offer-amount-${categoryId}`);
        //     const amount = parseInt(amountInput.value, 10);

        //     if (isNaN(amount) || amount < 0 || amount > 100) {
        //         Swal.fire({
        //             icon: 'warning',
        //             title: 'Invalid Offer Amount',
        //             text: 'Please enter a valid percentage between 0 and 100.',
        //         });
        //         return;
        //     }

        //     const response = await fetch('/admin/addCategoryOffer', {
        //         method: 'POST',
        //         headers: { 'Content-Type': 'application/json' },
        //         body: JSON.stringify({ percentage: amount, categoryId })
        //     });

        //     const data = await response.json();
        //     if (data.success) {
        //         Swal.fire({ icon: 'success', title: 'Offer added successfully!', timer: 1500 }).then(() => location.reload());
        //     } else {
        //         Swal.fire({ icon: 'error', title: 'Error adding offer', text: data.message });
        //     }
        // }

        // async function removeOffer(categoryId) {
        //     const response = await fetch('/admin/removeCategoryOffer', {
        //         method: 'POST',
        //         headers: { 'Content-Type': 'application/json' },
        //         body: JSON.stringify({ categoryId })
        //     });

        //     const data = await response.json();
        //     if (data.success) {
        //         Swal.fire({ icon: 'success', title: 'Offer removed successfully!', timer: 1500 }).then(() => location.reload());
        //     } else {
        //         Swal.fire({ icon: 'error', title: 'Error removing offer', text: data.message });
        //     }
        // }

        async function listCategory(categoryId) {
            const response = await fetch(`/admin/category/${categoryId}/list`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: categoryId })
            });

            const data = await response.json();
            if (data.success) {
                document.getElementById(`status-${categoryId}`).classList.remove('badge-secondary');
                document.getElementById(`status-${categoryId}`).classList.add('badge-success');
                document.getElementById(`status-${categoryId}`).textContent = 'Listed';
                document.getElementById(`list-unlist-btn-${categoryId}`).classList.remove('btn-list');
                document.getElementById(`list-unlist-btn-${categoryId}`).classList.add('btn-unlist');
                document.getElementById(`list-unlist-btn-${categoryId}`).textContent = 'Unlist';
                document.getElementById(`list-unlist-btn-${categoryId}`).setAttribute('onclick', `unlistCategory('${categoryId}')`);
            } else {
                Swal.fire({ icon: 'error', title: 'Error listing category', text: data.message });
            }
        }

        async function unlistCategory(categoryId) {
                try {
                    const response = await fetch(`/admin/category/${categoryId}/unlist`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ id: categoryId })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        console.error('Error:', errorData);
                        Swal.fire({ icon: 'error', title: 'Error unlisting category', text: errorData.message });
                        return;
                    }

                    const data = await response.json();
                    // console.log('Response data:', data);

                    if (data.success) {
                        const statusElement = document.getElementById(`status-${categoryId}`);
                        const buttonElement = document.getElementById(`list-unlist-btn-${categoryId}`);

                        if (statusElement && buttonElement) {
                            statusElement.classList.remove('badge-success');
                            statusElement.classList.add('badge-secondary');
                            statusElement.textContent = 'Unlisted';

                            buttonElement.classList.remove('btn-unlist');
                            buttonElement.classList.add('btn-list');
                            buttonElement.textContent = 'List';
                            buttonElement.setAttribute('onclick', `listCategory('${categoryId}')`);
                        } else {
                            console.error('Status or button not found');
                        }
                    } else {
                        Swal.fire({ icon: 'error', title: 'Error unlisting category', text: data.message });
                    }
                } catch (error) {
                    console.error('Error during unlisting category:', error); // Debugging statement
                    Swal.fire({ icon: 'error', title: 'Error unlisting category', text: 'An unexpected error occurred.' });
                }
            }


        async function submitCategory() {
            const name = document.getElementById("name").value;
            const description = document.getElementById("description").value;
            const errors = [];

            if (!name || !description) {
                errors.push('All fields are required.');
            }

            if (errors.length) {
                displayErrors(errors);
                return;
            }

            const response = await fetch('/admin/addCategory', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, description })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    // icon: 'success',
                    title: 'Category added successfully!',
                    timer: 1500
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error adding category',
                    text: data.message || 'Something went wrong.'
                });
            }
        }

        function displayErrors(errors) {
            const errorContainer = document.getElementById("error-container");
            const ul = errorContainer.querySelector("ul");
            ul.innerHTML = '';

            errors.forEach(error => {
                const li = document.createElement("li");
                li.textContent = error;
                ul.appendChild(li);
            });

            errorContainer.style.display = 'block';
        }
    </script>
</body>

</html>